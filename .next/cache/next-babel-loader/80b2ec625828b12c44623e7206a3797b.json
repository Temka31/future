{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/tema/future/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Line from \"../components/line\";\nimport fetch from \"isomorphic-unfetch\";\nexport default function Index(props) {\n  var oneLine = [\"id\", \"firstName\", \"lastName\", \"email\", \"phone\"];\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, __jsx(Line, {\n    oneLine: oneLine,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, props.shows.map(function (id) {\n    return __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, id.firstName);\n  })));\n}\n;\n\nIndex.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('http://www.filltext.com/?rows=32&id=%7Bnumber%7C1000%7D&firstName=%7BfirstName%7D&lastName=%7BlastName%7D&email=%7Bemail%7D&phone=%7Bphone%7C(xxx)xxx-xx-xx%7D&address=%7BaddressObject%7D&description=%7Blorem%7C32%7D'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            shows: data.map(function (entry) {\n              return entry.show;\n            })\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};","map":{"version":3,"sources":["/Users/tema/future/pages/index.js"],"names":["Line","fetch","Index","props","oneLine","shows","map","id","firstName","getInitialProps","res","json","data","console","log","length","entry","show"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,oBAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACnC,MAAIC,OAAO,GAAG,CAAC,IAAD,EAAO,WAAP,EAAoB,UAApB,EAAgC,OAAhC,EAAyC,OAAzC,CAAd;AACE,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,OAAO,EAAEA,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACDD,KAAK,CAACE,KAAN,CAAYC,GAAZ,CAAiB,UAAAC,EAAE;AAAA,WAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,EAAE,CAACC,SADR,CADkB;AAAA,GAAnB,CADC,CAFF,CADF;AAaD;AAAA;;AAEDN,KAAK,CAACO,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACJR,KAAK,CAAC,yNAAD,CADD;;AAAA;AAChBS,UAAAA,GADgB;AAAA;AAAA,2CAEHA,GAAG,CAACC,IAAJ,EAFG;;AAAA;AAEhBC,UAAAA,IAFgB;AAItBC,UAAAA,OAAO,CAACC,GAAR,qCAAyCF,IAAI,CAACG,MAA9C;AAJsB,2CAMf;AACLV,YAAAA,KAAK,EAAEO,IAAI,CAACN,GAAL,CAAS,UAAAU,KAAK;AAAA,qBAAIA,KAAK,CAACC,IAAV;AAAA,aAAd;AADF,WANe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB","sourcesContent":["import Line from \"../components/line\"\nimport fetch from \"isomorphic-unfetch\";\n\nexport default function Index(props) {\n  let oneLine = [\"id\", \"firstName\", \"lastName\", \"email\", \"phone\"];\n    return (\n      <div>\n        <Line oneLine={oneLine}/>\n        <ul>\n      {props.shows.map( id => (\n        <li>\n            {id.firstName}\n          \n        </li>\n      ))}\n    </ul>\n      </div>\n    );\n  };\n\n  Index.getInitialProps = async function() {\n    const res = await fetch('http://www.filltext.com/?rows=32&id=%7Bnumber%7C1000%7D&firstName=%7BfirstName%7D&lastName=%7BlastName%7D&email=%7Bemail%7D&phone=%7Bphone%7C(xxx)xxx-xx-xx%7D&address=%7BaddressObject%7D&description=%7Blorem%7C32%7D');\n    const data = await res.json();\n  \n    console.log(`Show data fetched. Count: ${data.length}`);\n  \n    return {\n      shows: data.map(entry => entry.show)\n    };\n  };"]},"metadata":{},"sourceType":"module"}