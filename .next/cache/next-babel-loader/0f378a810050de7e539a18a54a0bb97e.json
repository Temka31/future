{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/tema/future/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Line from \"../components/line\";\nexport default function Index() {\n  var oneLine = [\"id\", \"firstName\", \"lastName\", \"email\", \"phone\"];\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, __jsx(Line, {\n    oneLine: oneLine,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }));\n}\n;\n\nIndex.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"http://www.filltext.com/?rows=32&id=%7Bnumber%7C1000%7D&firstName=%7BfirstName%7D&lastName=%7BlastName%7D&email=%7Bemail%7D&phone=%7Bphone%7C(xxx)xxx-xx-xx%7D&address=%7BaddressObject%7D&description=%7Blorem%7C32%7D\"));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          data = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            shows: data.map(function (entry) {\n              return entry.show;\n            })\n          });\n\n        case 11:\n          _context.prev = 11;\n          _context.t0 = _context[\"catch\"](0);\n          return _context.abrupt(\"return\", {\n            shows: []\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 11]]);\n};","map":{"version":3,"sources":["/Users/tema/future/pages/index.js"],"names":["Line","Index","oneLine","getInitialProps","fetch","res","json","data","console","log","length","shows","map","entry","show"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,oBAAjB;AAGA,eAAe,SAASC,KAAT,GAAiB;AAC9B,MAAIC,OAAO,GAAG,CAAC,IAAD,EAAO,WAAP,EAAoB,UAApB,EAAgC,OAAhC,EAAyC,OAAzC,CAAd;AACE,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,IAAD;AAAM,IAAA,OAAO,EAAEA,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADF;AAKD;AAAA;;AAEDD,KAAK,CAACE,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEFC,KAAK,CAAC,yNAAD,CAFH;;AAAA;AAEdC,UAAAA,GAFc;AAAA;AAAA,2CAGDA,GAAG,CAACC,IAAJ,EAHC;;AAAA;AAGdC,UAAAA,IAHc;AAKpBC,UAAAA,OAAO,CAACC,GAAR,qCAAyCF,IAAI,CAACG,MAA9C;AALoB,2CAOb;AACLC,YAAAA,KAAK,EAAEJ,IAAI,CAACK,GAAL,CAAS,UAAAC,KAAK;AAAA,qBAAIA,KAAK,CAACC,IAAV;AAAA,aAAd;AADF,WAPa;;AAAA;AAAA;AAAA;AAAA,2CAWb;AACLH,YAAAA,KAAK,EAAE;AADF,WAXa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB","sourcesContent":["import Line from \"../components/line\"\n\n\nexport default function Index() {\n  let oneLine = [\"id\", \"firstName\", \"lastName\", \"email\", \"phone\"];\n    return (\n      <div>\n       <Line oneLine={oneLine}/>\n      </div>\n    );\n  };\n\n  Index.getInitialProps = async function() {\n    try {\n      const res = await fetch(\"http://www.filltext.com/?rows=32&id=%7Bnumber%7C1000%7D&firstName=%7BfirstName%7D&lastName=%7BlastName%7D&email=%7Bemail%7D&phone=%7Bphone%7C(xxx)xxx-xx-xx%7D&address=%7BaddressObject%7D&description=%7Blorem%7C32%7D\");\n      const data = await res.json();\n  \n      console.log(`Show data fetched. Count: ${data.length}`);\n  \n      return {\n        shows: data.map(entry => entry.show)\n      };\n    } catch {\n      return {\n        shows: []\n      };\n    }\n  };"]},"metadata":{},"sourceType":"module"}