{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nvar _jsxFileName = \"/Users/tema/future/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from \"isomorphic-unfetch\";\nimport { useState, useMemo, useEffect } from \"react\";\nimport Table from \"../components/table\";\nimport SortButton from \"../components/sortButton\";\nimport Description from \"../components/description\";\nimport Add from \"../components/add\";\nvar styles = {\n  root: {\n    margin: 0,\n    width: \"100%\"\n  }\n};\nexport default function Index(_ref) {\n  var humans = _ref.humans;\n\n  var _useState = useState(),\n      resItems = _useState[0],\n      setResItems = _useState[1];\n\n  var _useState2 = useState({\n    \"id\": 1\n  }, {\n    \"id\": 2\n  }),\n      items = _useState2[0],\n      setItems = _useState2[1];\n\n  var _useState3 = useState(1),\n      currentPage = _useState3[0],\n      setCurrentPage = _useState3[1];\n\n  var _useState4 = useState(50),\n      itemsPerPage = _useState4[0],\n      setItemsPerPage = _useState4[1];\n\n  var _useState5 = useState(),\n      selectedItem = _useState5[0],\n      setSelectedItem = _useState5[1];\n\n  var _useState6 = useState(false),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var addNewItem = function addNewItem(newItem) {\n    setItems(items.push(newItem));\n    console.log(items);\n  };\n\n  var pageNumbers = [];\n  var currentItems = 0;\n  var renderPageNumbers;\n\n  var pagess = function pagess() {\n    var indexOfLastItem = currentPage * itemsPerPage;\n    var indexOfFirstItem = indexOfLastItem - itemsPerPage;\n    currentItems = items.slice(indexOfFirstItem, indexOfLastItem);\n\n    for (var i = 1; i <= Math.ceil(items.length / itemsPerPage); i++) {\n      pageNumbers.push(i);\n    }\n\n    renderPageNumbers = pageNumbers.map(function (number) {\n      return __jsx(\"li\", {\n        key: number,\n        id: number,\n        onClick: handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, number);\n    });\n  };\n\n  var handleClick = function handleClick(event) {\n    setCurrentPage(Number(event.target.id));\n    setSelectedItem();\n  };\n\n  var handleClickRow = function handleClickRow(e) {\n    setSelectedItem(e);\n  };\n\n  useMemo(function () {\n    pagess();\n  }, [items]);\n  var headers = useMemo(function () {\n    return _Object$keys(items[0]);\n  }, [items]);\n  useEffect(function () {\n    setItems(resItems);\n  }, [resItems]);\n  useEffect(function () {\n    setLoading(true);\n    fetch(\"http://www.filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}\").then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      return setResItems(data);\n    });\n  }, []);\n\n  var handleReset = function handleReset() {\n    setItems(humans);\n  };\n\n  var handleSort = function handleSort(name, reverse) {\n    var newItems = _toConsumableArray(items);\n\n    if (reverse) {\n      newItems.sort(function (a, b) {\n        if (typeof a[name] === \"string\") {\n          return a[name].localeCompare(b[name]);\n        } else if (typeof a[name] === \"number\") {\n          return +a[name] > +b[name];\n        }\n      });\n    } else {\n      newItems.sort(function (a, b) {\n        if (typeof a[name] === \"string\") {\n          return b[name].localeCompare(a[name]);\n        } else if (typeof a[name] === \"number\") {\n          return +a[name] < +b[name];\n        }\n      });\n    }\n\n    setItems(newItems);\n    setSelectedItem();\n  };\n\n  var renderHeader = function renderHeader() {\n    return __jsx(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, __jsx(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, headers.map(function (header) {\n      return __jsx(\"th\", {\n        key: header,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, __jsx(SortButton, {\n        title: header,\n        onReset: handleReset,\n        onSort: handleSort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }));\n    })));\n  };\n\n  var renderDescription = function renderDescription() {\n    if (selectedItem > 0) {\n      return __jsx(Description, {\n        item: currentItems[currentItems.findIndex(function (item) {\n          return item.id == selectedItem;\n        })],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      });\n    }\n  };\n\n  return __jsx(\"div\", {\n    style: styles.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, __jsx(Add, {\n    addNewItem: addNewItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }), __jsx(Table, {\n    items: currentItems,\n    renderHeader: renderHeader,\n    renderPageNumbers: renderPageNumbers,\n    onClickRow: handleClickRow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }), renderDescription());\n} // Index.getInitialProps = async function() {\n//   const res = await fetch(\n//     \"http://www.filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}\"\n//   );\n//   const data = await res.json();\n//   console.log(`Show data fetched. Count: ${data.length}`);\n//   return {\n//     humans: data\n//   };\n// };","map":{"version":3,"sources":["/Users/tema/future/pages/index.js"],"names":["fetch","useState","useMemo","useEffect","Table","SortButton","Description","Add","styles","root","margin","width","Index","humans","resItems","setResItems","items","setItems","currentPage","setCurrentPage","itemsPerPage","setItemsPerPage","selectedItem","setSelectedItem","loading","setLoading","addNewItem","newItem","push","console","log","pageNumbers","currentItems","renderPageNumbers","pagess","indexOfLastItem","indexOfFirstItem","slice","i","Math","ceil","length","map","number","handleClick","event","Number","target","id","handleClickRow","e","headers","then","response","json","data","handleReset","handleSort","name","reverse","newItems","sort","a","b","localeCompare","renderHeader","header","renderDescription","findIndex","item"],"mappings":"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","sourcesContent":["import fetch from \"isomorphic-unfetch\";\nimport { useState, useMemo, useEffect } from \"react\";\nimport Table from \"../components/table\";\nimport SortButton from \"../components/sortButton\";\nimport Description from \"../components/description\";\nimport Add from \"../components/add\";\n\nconst styles = {\n  root: {\n    margin: 0,\n    width: \"100%\"\n  }\n};\n\nexport default function Index({ humans }) {\n  const [resItems, setResItems] = useState();\n  const [items, setItems] = useState({\"id\":1},{\"id\":2});\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(50);\n  const [selectedItem, setSelectedItem] = useState();\n  const [loading, setLoading] = useState(false);\n\n  const addNewItem = newItem => {\n    setItems(items.push(newItem));\n    console.log(items);\n  };\n\n  let pageNumbers = [];\n  let currentItems=0;\n  let renderPageNumbers;\n  \n  const pagess=()=>{\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  currentItems = items.slice(indexOfFirstItem, indexOfLastItem);\n  \n  for (let i = 1; i <= Math.ceil(items.length / itemsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  renderPageNumbers = pageNumbers.map(number => {\n    return (\n      <li key={number} id={number} onClick={handleClick}>\n        {number}\n      </li>\n    );\n  });}\n\n  const handleClick = event => {\n    setCurrentPage(Number(event.target.id));\n    setSelectedItem();\n  };\n\n  const handleClickRow = e => {\n    setSelectedItem(e);\n  };\n\n  useMemo(()=>\n  {\n   pagess() \n  },[items]\n  )\n\n  const headers = useMemo(() => {\n    return Object.keys(items[0]);\n  }, [items]);\n\n  useEffect(() => {\n    setItems(resItems);\n  }, [resItems]);\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(\"http://www.filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}\")\n         .then(response => response.json())\n         .then(data => setResItems(data))\n   },[]);\n\n   \n\n  const handleReset = () => {\n    setItems(humans);\n  };\n\n  const handleSort = (name, reverse) => {\n    const newItems = [...items];\n    if (reverse) {\n      newItems.sort((a, b) => {\n        if (typeof a[name] === \"string\") {\n          return a[name].localeCompare(b[name]);\n        } else if (typeof a[name] === \"number\") {\n          return +a[name] > +b[name];\n        }\n      });\n    } else {\n      newItems.sort((a, b) => {\n        if (typeof a[name] === \"string\") {\n          return b[name].localeCompare(a[name]);\n        } else if (typeof a[name] === \"number\") {\n          return +a[name] < +b[name];\n        }\n      });\n    }\n    setItems(newItems);\n    setSelectedItem();\n  };\n  const renderHeader = () => {\n    return (\n      <thead>\n        <tr>\n          {headers.map(header => {\n            return (\n              <th key={header}>\n                <SortButton\n                  title={header}\n                  onReset={handleReset}\n                  onSort={handleSort}\n                />\n              </th>\n            );\n          })}\n        </tr>\n      </thead>\n    );\n  };\n\n  const renderDescription = () => {\n    if (selectedItem > 0) {\n      return (\n        <Description\n          item={\n            currentItems[\n              currentItems.findIndex(item => item.id == selectedItem)\n            ]\n          }\n        />\n      );\n    }\n  };\n\n  return (\n    <div style={styles.root}>\n      <Add addNewItem={addNewItem} />\n      <Table\n        items={currentItems}\n        renderHeader={renderHeader}\n        renderPageNumbers={renderPageNumbers}\n        onClickRow={handleClickRow}\n      />\n      {renderDescription()}\n    </div>\n  );\n}\n\n// Index.getInitialProps = async function() {\n//   const res = await fetch(\n//     \"http://www.filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}\"\n//   );\n//   const data = await res.json();\n\n//   console.log(`Show data fetched. Count: ${data.length}`);\n\n//   return {\n//     humans: data\n//   };\n// };\n"]},"metadata":{},"sourceType":"module"}