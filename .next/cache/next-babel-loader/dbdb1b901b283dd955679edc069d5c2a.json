{"ast":null,"code":"var _jsxFileName = \"/Users/tema/future/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from \"isomorphic-unfetch\";\nimport { useState, useMemo, useEffect } from \"react\";\nimport Table from \"../components/table\";\nimport SortButton from \"../components/sortButton\";\nimport Description from \"../components/description\";\nimport Add from \"../components/add\";\nimport Search from \"../components/search\";\nconst styles = {\n  root: {\n    margin: 0,\n    width: \"100%\"\n  },\n  header: {\n    border: \"1px solid grey\",\n    width: \"20%\"\n  }\n};\nexport default function Index({\n  humans\n}) {\n  const {\n    0: items,\n    1: setItems\n  } = useState([]);\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const {\n    0: itemsPerPage,\n    1: setItemsPerPage\n  } = useState(50);\n  const {\n    0: selectedItemID,\n    1: setSelectedItemID\n  } = useState();\n  const {\n    0: selectedItemLastName,\n    1: setSelectedItemLastName\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState();\n  const {\n    0: resItems,\n    1: setResItems\n  } = useState([]);\n  const headers = [\"id\", \"firstName\", \"lastName\", \"email\", \"phone\"];\n  const minUrl = \"http://www.filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}\";\n  const maxUrl = \"http://www.filltext.com/?rows=1000&id={number|1000}&firstName={firstName}&delay=3&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}\";\n  const {\n    0: url,\n    1: setUrl\n  } = useState();\n  useEffect(() => {\n    setLoading(true);\n    fetch(url).then(response => response.json()).then(data => setResItems(data));\n  }, [url]);\n\n  const handleClick = event => {\n    setCurrentPage(Number(event.target.id));\n    setSelectedItemID();\n  };\n\n  const handleClickRow = (id, lastName) => {\n    setSelectedItemID(id);\n    setSelectedItemLastName(lastName);\n  };\n\n  const handleClickSearch = search => {\n    if (search.length > 0) {\n      setItems(items.filter(item => {\n        return item[\"firstName\"].toLowerCase().includes(search.toLowerCase()) || item[\"lastName\"].toLowerCase().includes(search.toLowerCase()) || item[\"email\"].toLowerCase().includes(search.toLowerCase()) || item[\"phone\"].toLowerCase().includes(search.toLowerCase());\n      }));\n    }\n  }; // const headers = useMemo(() => {\n  //   if (items.length > 0) {\n  //     return Object.keys(items[0]);\n  //   } else {\n  //     return [];\n  //   }\n  // }, [items]);\n\n\n  useMemo(() => {\n    setItems(resItems);\n    setLoading(false);\n  }, [resItems]);\n\n  const renderHeader = () => {\n    return __jsx(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, __jsx(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, headers.map(header => {\n      return __jsx(\"th\", {\n        style: styles.header,\n        key: header,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, __jsx(SortButton, {\n        title: header,\n        onReset: handleReset,\n        onSort: handleSort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }));\n    })));\n  };\n\n  const Urlm = () => {\n    setUrl(minUrl);\n  };\n\n  const Urlb = () => {\n    setUrl(maxUrl);\n  };\n\n  const currentItems = useMemo(() => {\n    let indexOfLastItem = currentPage * itemsPerPage;\n    let indexOfFirstItem = indexOfLastItem - itemsPerPage;\n    return items.slice(indexOfFirstItem, indexOfLastItem);\n  }, [items, currentPage]);\n\n  const addNewItem = newItem => {\n    setResItems([...items, newItem]);\n  };\n\n  const handleReset = () => {\n    setItems(resItems);\n  };\n\n  const handleSort = (name, reverse) => {\n    const newItems = [...items];\n\n    if (reverse) {\n      newItems.sort((a, b) => {\n        if (typeof a[name] === \"string\") {\n          return a[name].localeCompare(b[name]);\n        } else {\n          return +a[name] - +b[name];\n        }\n      });\n    } else {\n      newItems.sort((a, b) => {\n        if (typeof a[name] === \"string\") {\n          return b[name].localeCompare(a[name]);\n        } else {\n          return +b[name] - +a[name];\n        }\n      });\n    }\n\n    setItems(newItems);\n    setSelectedItemID();\n  };\n\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(items.length / itemsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  const renderPageNumbers = pageNumbers.map(number => {\n    return __jsx(\"li\", {\n      key: number,\n      id: number,\n      onClick: handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, number);\n  });\n\n  const renderDescription = () => {\n    if (selectedItemID > 0) {\n      return __jsx(Description, {\n        item: currentItems[currentItems.findIndex(item => item.id == selectedItemID && item.lastName == selectedItemLastName)],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      });\n    }\n  };\n\n  return __jsx(\"div\", {\n    style: styles.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, url ? loading ? __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, \"loading... \")) : __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, __jsx(Add, {\n    addNewItem: addNewItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }), __jsx(Search, {\n    onSearch: handleClickSearch,\n    onReset: handleReset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }), __jsx(Table, {\n    items: currentItems,\n    renderHeader: renderHeader,\n    renderPageNumbers: renderPageNumbers,\n    onClickRow: handleClickRow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }), renderDescription()) : __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    onClick: Urlm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, \"\\u041C\\u0430\\u043B\\u044B\\u0439 \\u0441\\u043F\\u0438\\u0441\\u043E\\u043A \"), __jsx(\"button\", {\n    onClick: Urlb,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, \"\\u0411\\u043E\\u043B\\u044C\\u0448\\u043E\\u0439 \\u0441\\u043F\\u0438\\u0441\\u043E\\u043A \")));\n}","map":{"version":3,"sources":["/Users/tema/future/pages/index.js"],"names":["fetch","useState","useMemo","useEffect","Table","SortButton","Description","Add","Search","styles","root","margin","width","header","border","Index","humans","items","setItems","currentPage","setCurrentPage","itemsPerPage","setItemsPerPage","selectedItemID","setSelectedItemID","selectedItemLastName","setSelectedItemLastName","loading","setLoading","resItems","setResItems","headers","minUrl","maxUrl","url","setUrl","then","response","json","data","handleClick","event","Number","target","id","handleClickRow","lastName","handleClickSearch","search","length","filter","item","toLowerCase","includes","renderHeader","map","handleReset","handleSort","Urlm","Urlb","currentItems","indexOfLastItem","indexOfFirstItem","slice","addNewItem","newItem","name","reverse","newItems","sort","a","b","localeCompare","pageNumbers","i","Math","ceil","push","renderPageNumbers","number","renderDescription","findIndex"],"mappings":"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","sourcesContent":["import fetch from \"isomorphic-unfetch\";\nimport { useState, useMemo, useEffect } from \"react\";\nimport Table from \"../components/table\";\nimport SortButton from \"../components/sortButton\";\nimport Description from \"../components/description\";\nimport Add from \"../components/add\";\nimport Search from \"../components/search\";\n\nconst styles = {\n  root: {\n    margin: 0,\n    width: \"100%\"\n  },\n  header: {\n    border: \"1px solid grey\",\n    width: \"20%\"\n  }\n};\n\nexport default function Index({ humans }) {\n  const [items, setItems] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(50);\n  const [selectedItemID, setSelectedItemID] = useState();\n  const [selectedItemLastName, setSelectedItemLastName] = useState();\n  const [loading, setLoading] = useState();\n  const [resItems, setResItems] = useState([]);\n  const headers = [\"id\", \"firstName\", \"lastName\", \"email\", \"phone\"];\n  const minUrl = \"http://www.filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}\"\n const maxUrl = \"http://www.filltext.com/?rows=1000&id={number|1000}&firstName={firstName}&delay=3&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}\"\n const [url, setUrl] = useState();\n  \n \n \n useEffect(() => {\n   setLoading(true)\n    fetch(\n      url\n    )\n      .then(response => response.json())\n      .then(data => setResItems(data));\n  }, [url]);\n\n  const handleClick = event => {\n    setCurrentPage(Number(event.target.id));\n    setSelectedItemID();\n  };\n\n  const handleClickRow = (id,lastName) => {\n    setSelectedItemID(id);\n    setSelectedItemLastName(lastName);\n  };\n\n  const handleClickSearch = search => {\n    if (search.length > 0) {\n      setItems(\n        items.filter(item => {\n          return (\n            item[\"firstName\"].toLowerCase().includes(search.toLowerCase()) ||\n            item[\"lastName\"].toLowerCase().includes(search.toLowerCase()) ||\n            item[\"email\"].toLowerCase().includes(search.toLowerCase()) ||\n            item[\"phone\"].toLowerCase().includes(search.toLowerCase())\n          );\n        })\n      );\n    }\n  };\n\n  // const headers = useMemo(() => {\n  //   if (items.length > 0) {\n  //     return Object.keys(items[0]);\n  //   } else {\n  //     return [];\n  //   }\n  // }, [items]);\n\n  useMemo(() => {\n    setItems(resItems);\n    setLoading(false);\n  }, [resItems]);\n\n  const renderHeader = () => {\n    return (\n      <thead>\n        <tr>\n          {headers.map(header => {\n            return (\n              <th style={styles.header} key={header}>\n                <SortButton\n                  title={header}\n                  onReset={handleReset}\n                  onSort={handleSort}\n                />\n              </th>\n            );\n          })}\n        </tr>\n      </thead>\n    );\n  };\n\nconst Urlm = ()=>{\n  setUrl(minUrl)\n}\nconst Urlb = ()=>{\n  setUrl(maxUrl)\n}\n\n\n\n\n  const currentItems = useMemo(() => {\n    let indexOfLastItem = currentPage * itemsPerPage;\n    let indexOfFirstItem = indexOfLastItem - itemsPerPage;\n    return items.slice(indexOfFirstItem, indexOfLastItem);\n  }, [items, currentPage]);\n\n  const addNewItem = newItem => {\n    setResItems([...items, newItem]);\n  };\n\n  const handleReset = () => {\n    setItems(resItems);\n  };\n\n  const handleSort = (name, reverse) => {\n    const newItems = [...items];\n    if (reverse) {\n      newItems.sort((a, b) => {\n        if (typeof a[name] === \"string\") {\n          return a[name].localeCompare(b[name]);\n        } else {\n          return +a[name] - +b[name];\n        }\n      });\n    } else {\n      newItems.sort((a, b) => {\n        if (typeof a[name] === \"string\") {\n          return b[name].localeCompare(a[name]);\n        } else {\n          return +b[name] - +a[name];\n        }\n      });\n    }\n    setItems(newItems);\n    setSelectedItemID();\n  };\n\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(items.length / itemsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  const renderPageNumbers = pageNumbers.map(number => {\n    return (\n      <li key={number} id={number} onClick={handleClick}>\n        {number}\n      </li>\n    );\n  });\n\n  const renderDescription = () => {\n    if (selectedItemID > 0) {\n      return (\n        <Description\n          item={\n            currentItems[\n              currentItems.findIndex(item => item.id == selectedItemID && item.lastName == selectedItemLastName)\n            ]\n          }\n        />\n      );\n    }\n  };\n\n  return (\n    <div style={styles.root}>\n      {\n      \n      url?(\n      loading ? (\n        <div>\n        <p>loading... </p>\n        \n        </div>\n      ) : (\n        <div>\n          <Add addNewItem={addNewItem} />\n          <Search onSearch={handleClickSearch} onReset={handleReset} />\n          <Table\n            items={currentItems}\n            renderHeader={renderHeader}\n            renderPageNumbers={renderPageNumbers}\n            onClickRow={handleClickRow}\n          />\n          {renderDescription()}\n        </div>\n      )):(\n      <div>\n      <button onClick={Urlm}>Малый список </button>\n        <button onClick={Urlb}>Большой список </button>\n        </div>)\n    }\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}