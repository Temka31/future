{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nvar _jsxFileName = \"/Users/tema/future/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Line from \"../components/Row\";\nimport fetch from \"isomorphic-unfetch\";\nimport { useState, useMemo } from \"react\";\nimport SortId from \"../components/sort\";\nimport Table from \"../components/table\";\nimport SortButton from \"../components/sortButton\";\nvar styles = {\n  root: {\n    margin: 0,\n    width: \"100%\"\n  }\n};\n\nfunction sortId(humans) {\n  humans.sort(function (a, b) {\n    return a.id - b.id;\n  });\n}\n\nfunction rsortId(humans) {\n  return humans.reverse();\n}\n\nexport default function Index(_ref) {\n  var humans = _ref.humans;\n\n  var _useState = useState(humans),\n      items = _useState[0],\n      setItems = _useState[1];\n\n  var headers = useMemo(function () {\n    return _Object$keys(humans[0]);\n  }, [humans]);\n\n  var handleReset = function handleReset() {\n    setItems(humans);\n  };\n\n  var handleSort = function handleSort(name, reverse) {\n    if (reverse) {\n      setItems(items.sort(function (a, b) {\n        return b[name] - a[name];\n      }));\n    } else {\n      setItems(items.sort(function (a, b) {\n        return a[name] - b[name];\n      }));\n    }\n  };\n\n  var renderHeader = function renderHeader() {\n    return __jsx(React.Fragment, null, headers.map(function (header) {\n      return __jsx(\"th\", {\n        key: header,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, __jsx(SortButton, {\n        title: header,\n        onReset: handleReset,\n        onSort: handleSort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }));\n    }));\n  };\n\n  return __jsx(\"div\", {\n    style: styles.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, __jsx(Table, {\n    humans: humans,\n    renderHeader: renderHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }));\n}\n\nIndex.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"http://www.filltext.com/?rows=32&id=%7Bnumber%7C1000%7D&firstName=%7BfirstName%7D&lastName=%7BlastName%7D&email=%7Bemail%7D&phone=%7Bphone%7C(xxx)xxx-xx-xx%7D&address=%7BaddressObject%7D&description=%7Blorem%7C32%7D\"));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            humans: data\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};","map":{"version":3,"sources":["/Users/tema/future/pages/index.js"],"names":["Line","fetch","useState","useMemo","SortId","Table","SortButton","styles","root","margin","width","sortId","humans","sort","a","b","id","rsortId","reverse","Index","items","setItems","headers","handleReset","handleSort","name","renderHeader","map","header","getInitialProps","res","json","data","console","log","length"],"mappings":"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","sourcesContent":["import Line from \"../components/Row\";\nimport fetch from \"isomorphic-unfetch\";\nimport { useState, useMemo } from \"react\";\n\nimport SortId from \"../components/sort\";\nimport Table from \"../components/table\";\nimport SortButton from \"../components/sortButton\";\n\nconst styles = {\n  root: {\n    margin: 0,\n    width: \"100%\"\n  }\n};\nfunction sortId(humans) {\n  humans.sort(function(a, b) {\n    return a.id - b.id;\n  });\n}\nfunction rsortId(humans) {\n  return humans.reverse();\n}\n\nexport default function Index({ humans }) {\n  const [items, setItems] = useState(humans);\n  const headers = useMemo(() => {\n    return Object.keys(humans[0]);\n  }, [humans]);\n  const handleReset = () => {\n    setItems(humans);\n  };\n\n  const handleSort = (name, reverse) => {\n    if (reverse) {\n      setItems(\n        items.sort((a, b) => {\n          return b[name] - a[name];\n        })\n      );\n    } else {\n      setItems(\n        items.sort((a, b) => {\n          return a[name] - b[name];\n        })\n      );\n    }\n  };\n  const renderHeader = () => {\n    return (\n      <>\n        {headers.map(header => {\n          return (\n            <th key={header}>\n              <SortButton\n                title={header}\n                onReset={handleReset}\n                onSort={handleSort}\n              />\n            </th>\n          );\n        })}\n      </>\n    );\n  };\n  return (\n    <div style={styles.root}>\n      <Table humans={humans} renderHeader={renderHeader} />\n    </div>\n  );\n}\n\nIndex.getInitialProps = async function() {\n  const res = await fetch(\n    \"http://www.filltext.com/?rows=32&id=%7Bnumber%7C1000%7D&firstName=%7BfirstName%7D&lastName=%7BlastName%7D&email=%7Bemail%7D&phone=%7Bphone%7C(xxx)xxx-xx-xx%7D&address=%7BaddressObject%7D&description=%7Blorem%7C32%7D\"\n  );\n  const data = await res.json();\n\n  console.log(`Show data fetched. Count: ${data.length}`);\n\n  return {\n    humans: data\n  };\n};\n"]},"metadata":{},"sourceType":"module"}