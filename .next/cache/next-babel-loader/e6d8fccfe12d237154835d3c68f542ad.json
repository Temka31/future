{"ast":null,"code":"var _jsxFileName = \"/Users/tema/future/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Line from \"../components/line\";\nimport fetch from \"isomorphic-unfetch\";\nexport default function Index(props) {\n  let oneLine = [\"id\", \"firstName\", \"lastName\", \"email\", \"phone\"];\n  {\n    props.human.sort(function (a, b) {\n      return a.id - b.id;\n    });\n  }\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, props.humans.map(human => __jsx(Line, {\n    human: human,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }))));\n}\n;\n\nIndex.getInitialProps = async function () {\n  const res = await fetch('http://www.filltext.com/?rows=32&id=%7Bnumber%7C1000%7D&firstName=%7BfirstName%7D&lastName=%7BlastName%7D&email=%7Bemail%7D&phone=%7Bphone%7C(xxx)xxx-xx-xx%7D&address=%7BaddressObject%7D&description=%7Blorem%7C32%7D');\n  const data = await res.json();\n  console.log(`Show data fetched. Count: ${data.length}`);\n  console.log(`Show data fetched. Count: ${data[1]}`);\n  return {\n    humans: data\n  };\n};","map":{"version":3,"sources":["/Users/tema/future/pages/index.js"],"names":["Line","fetch","Index","props","oneLine","human","sort","a","b","id","humans","map","getInitialProps","res","data","json","console","log","length"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,oBAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACnC,MAAIC,OAAO,GAAG,CAAC,IAAD,EAAO,WAAP,EAAoB,UAApB,EAAgC,OAAhC,EAAyC,OAAzC,CAAd;AAEA;AAACD,IAAAA,KAAK,CAACE,KAAN,CAAYC,IAAZ,CAAiB,UAASC,CAAT,EAAYC,CAAZ,EAAc;AAC9B,aAAOD,CAAC,CAACE,EAAF,GAAKD,CAAC,CAACC,EAAd;AACD,KAFA;AAEE;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACDN,KAAK,CAACO,MAAN,CAAaC,GAAb,CAAkBN,KAAK,IACtB,MAAC,IAAD;AAAO,IAAA,KAAK,EAAEA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADC,CANF,CADF;AAgBD;AAAA;;AAEDH,KAAK,CAACU,eAAN,GAAwB,kBAAiB;AACvC,QAAMC,GAAG,GAAG,MAAMZ,KAAK,CAAC,yNAAD,CAAvB;AACA,QAAMa,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAa,6BAA4BH,IAAI,CAACI,MAAO,EAArD;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAa,6BAA4BH,IAAI,CAAC,CAAD,CAAI,EAAjD;AAEA,SAAO;AACLJ,IAAAA,MAAM,EAAEI;AADH,GAAP;AAGD,CAVD","sourcesContent":["import Line from \"../components/line\"\nimport fetch from \"isomorphic-unfetch\";\n\nexport default function Index(props) {\n  let oneLine = [\"id\", \"firstName\", \"lastName\", \"email\", \"phone\"];\n  \n  {props.human.sort(function(a, b){\n    return a.id-b.id\n  })}\n  \n    return (\n      <div>\n        {/* <Line oneLine={oneLine}/> */}\n        \n\n\n\n        <ul>\n      {props.humans.map( human => (\n        <Line  human={human}/>\n        \n      ))}\n    </ul>\n    \n      </div>\n    );\n  };\n\n  Index.getInitialProps = async function() {\n    const res = await fetch('http://www.filltext.com/?rows=32&id=%7Bnumber%7C1000%7D&firstName=%7BfirstName%7D&lastName=%7BlastName%7D&email=%7Bemail%7D&phone=%7Bphone%7C(xxx)xxx-xx-xx%7D&address=%7BaddressObject%7D&description=%7Blorem%7C32%7D');\n    const data = await res.json();\n  \n    console.log(`Show data fetched. Count: ${data.length}`);\n    console.log(`Show data fetched. Count: ${data[1]}`);\n  \n    return {\n      humans: data\n    };\n  };"]},"metadata":{},"sourceType":"module"}