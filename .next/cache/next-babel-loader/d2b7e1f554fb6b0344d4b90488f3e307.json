{"ast":null,"code":"var _jsxFileName = \"/Users/tema/future/components/table.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Row from \"./Row\";\nexport default function Table(_ref) {\n  var items = _ref.items,\n      renderHeader = _ref.renderHeader,\n      renderPageNumbers = _ref.renderPageNumbers;\n  return __jsx(React.Fragment, null, __jsx(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, renderHeader(), __jsx(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, items.map(function (item) {\n    return __jsx(Row, {\n      human: item,\n      key: \"\".concat(item.id, \":\").concat(item.firstName, \"-\").concat(item.lastName),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    });\n  }))), __jsx(\"ul\", {\n    id: \"page-numbers\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, renderPageNumbers));\n}","map":{"version":3,"sources":["/Users/tema/future/components/table.js"],"names":["Row","Table","items","renderHeader","renderPageNumbers","map","item","id","firstName","lastName"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,OAAhB;AAEA,eAAe,SAASC,KAAT,OAA2D;AAAA,MAA1CC,KAA0C,QAA1CA,KAA0C;AAAA,MAAnCC,YAAmC,QAAnCA,YAAmC;AAAA,MAArBC,iBAAqB,QAArBA,iBAAqB;AACxE,SACE,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,YAAY,EADf,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACG,GAAN,CAAU,UAAAC,IAAI;AAAA,WACb,MAAC,GAAD;AAAK,MAAA,KAAK,EAAEA,IAAZ;AAAkB,MAAA,GAAG,YAAKA,IAAI,CAACC,EAAV,cAAgBD,IAAI,CAACE,SAArB,cAAkCF,IAAI,CAACG,QAAvC,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADa;AAAA,GAAd,CADH,CAFF,CADA,EASA;AAAI,IAAA,EAAE,EAAC,cAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACWL,iBADX,CATA,CADF;AAeD","sourcesContent":["import Row from \"./Row\";\n\nexport default function Table({ items, renderHeader, renderPageNumbers }) {\n  return (\n    <>\n    <table>\n      {renderHeader()}\n      <tbody>\n        {items.map(item => (\n          <Row human={item} key={`${item.id}:${item.firstName}-${item.lastName}`} />\n        ))}\n      </tbody>\n    </table>\n    <ul id=\"page-numbers\">\n              {renderPageNumbers}\n            </ul>\n</>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}